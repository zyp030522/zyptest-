1.在项目中安装包
npm install 包的完整名称
简化为
npm i 包的完整名称

----------------------------------------------------
2.node_modules 文件夹用来存放所有已安装到项目中的包。
require() 导入第三方包时，就是从这个目录中查找并加载包。
package-lock.json 配置文件用来记录 node_modules 
目录下的每一个包的下载信息，例如包的名字、版本号、下载地址等。
------------------------------------------------------------------------

3.安装指定版本的包
npm i 包的名称和版本号

4.快速创建 packeage.json文件到目录中
npm init -y
上述命令只能在英文的目录下成功运行！
所以，项目文件夹的名称一定要使用英文命名，不要使用中文，不能出现空格。

5.packeage.json文件中的dependencies节点 专门用来记录您使用 npm install 
命令安装了哪些包


6.ipn install 命令
 可以一次性安装所有包 前提是包名要在 dependencies节点里面
执行 npm install 命令时 ，npm包管理工具会先读取packeage.json文件到目录中的
dependencies节点中的包名 读取到之后npm包管理工具会一次性把所有的包安装下来

7.卸载包的命令
npm uninstall 包的名称
注意：npm uninstall 命令执行后 会把卸载的包 自动从package.json的dependebcies
节点中移除掉 
- - - --------------------------------------------------------------------------------------

8.devDependencies节点
如果某些包只在项目开发阶段会用到，在项目上线之后不会用到，
则建议把这些包记录到 devDependencies 节点中。
—— —— —— —— —— —— —— —— —— ——
与之对应的，如果某些包在开发和项目上线之后都需要用到，
则建议把这些包记录到 dependencies 节点中

9.##安装指定的包并记录到devDependencies节点中
npm i 包名 -D
##注意 上述命令是简写形式 等价于下面的完整写法
npm install 包名 --save-dev


---------------------------------------------------------

10.解决下包慢的问题
切换npm 的下包镜像源
##查看当前的下包镜像源
npm config get registry
##将下包的镜像源切换为淘宝的镜像源
npm config set registry=淘宝的下包地址
## 检查镜像源是否成功
npm config get registry

11.通过npm包管理器 将nrm安装为全局可用的工具
npm i nrm -g
查看所有可用的镜像源
nrm ls
将下包的镜像源切换为淘宝
nrm use taobao

12.项目包
开发依赖包       npm i 包名 -D #开发依赖包（会被记录到devDependencies节点下）
核心依赖包       npm i 报名       #核心依赖包（会被记录到dependencies节点下）


13.全局包
在执行 npm install 命令时，如果提供了 -g 参数，则会把包安装为全局包。
npm i 包名 -g   #全局安装指定的包
npm uninstall 包名 -g  #卸载全局安装的包

登录npm账号
npm login
把包发布到那npm上
npm publish
删除自己发布的包
npm unpublish 包名 --force